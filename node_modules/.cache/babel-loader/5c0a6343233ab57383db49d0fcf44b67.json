{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\React-Wordle\\\\src\\\\components\\\\Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useWordle from '../hooks/useWordle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Wordle(_ref) {\n  _s();\n\n  let {\n    solution\n  } = _ref;\n  const {\n    currentGuess,\n    handleKeup\n  } = useWordle(solution);\n  useEffect(() => {\n    window.addEventListener('keyup', handleKeup);\n    return () => window.removeEventListener('keyup', handleKeup);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Wordle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wordle, \"SGXlpgGoKNh3X1O2RwOrpIb4PvQ=\", false, function () {\n  return [useWordle];\n});\n\n_c = Wordle;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wordle\");","map":{"version":3,"sources":["C:/Code/React-Wordle/src/components/Wordle.js"],"names":["React","useEffect","useWordle","Wordle","solution","currentGuess","handleKeup","window","addEventListener","removeEventListener"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAEA,eAAe,SAASC,MAAT,OAA4B;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAEvC,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAA6BJ,SAAS,CAACE,QAAD,CAA5C;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCF,UAAjC;AAEA,WAAO,MAAMC,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCH,UAApC,CAAb;AACH,GAJQ,CAAT;AAKF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GAZuBH,M;UAEeD,S;;;KAFfC,M","sourcesContent":["import React, { useEffect } from 'react'\r\nimport useWordle from '../hooks/useWordle'\r\n\r\nexport default function Wordle({solution}) {\r\n\r\n    const {currentGuess, handleKeup} = useWordle(solution);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('keyup', handleKeup)\r\n\r\n        return () => window.removeEventListener('keyup', handleKeup)\r\n    })\r\n  return (\r\n    <div>Wordle</div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}