{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useWordle = solution => {\n  _s();\n\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]); //each guess is an array\n\n  const [history, setHistory] = useState([]); // each guess is a string\n\n  const [isCorrent, setIsCorrect] = useState(false);\n\n  const formatQuess = () => {};\n\n  const addNewQuess = () => {};\n\n  const handleKeyUp = () => {};\n\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    isCorrent,\n    handleKeyUp\n  };\n};\n\n_s(useWordle, \"6dw/klRzDMgw6jl4jh6BwGMc9pA=\");\n\nexport default useWordle;","map":{"version":3,"sources":["C:/Code/React-Wordle/src/hooks/useWordle.js"],"names":["useState","useWordle","solution","turn","setTurn","currentGuess","setCurrentGuess","guesses","setGuesses","history","setHistory","isCorrent","setIsCorrect","formatQuess","addNewQuess","handleKeyUp"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC,CAH8B,CAGc;;AAC5C,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAJ8B,CAIc;;AAC5C,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,QAAMC,WAAW,GAAG,MAAM,CAAE,CAA5B;;AAEA,SAAO;AAACZ,IAAAA,IAAD;AAAOE,IAAAA,YAAP;AAAqBE,IAAAA,OAArB;AAA8BI,IAAAA,SAA9B;AAAyCI,IAAAA;AAAzC,GAAP;AACD,CAdD;;GAAMd,S;;AAeN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useWordle = (solution) => {\r\n  const [turn, setTurn] = useState(0);\r\n  const [currentGuess, setCurrentGuess] = useState(\"\");\r\n  const [guesses, setGuesses] = useState([]); //each guess is an array\r\n  const [history, setHistory] = useState([]); // each guess is a string\r\n  const [isCorrent, setIsCorrect] = useState(false);\r\n\r\n  const formatQuess = () => {};\r\n\r\n  const addNewQuess = () => {};\r\n\r\n  const handleKeyUp = () => {};\r\n\r\n  return {turn, currentGuess, guesses, isCorrent, handleKeyUp}\r\n};\r\nexport default useWordle;\r\n"]},"metadata":{},"sourceType":"module"}